{"version":3,"sources":["firebase.js","Enroll.js","Assign.js","Hire.js","Remove.js","StudentInfo.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","Enroll","props","handleSubmit","e","preventDefault","studentsRef","database","ref","student","name","studentName","current","value","teacher","push","alert","state","React","createRef","Form","onSubmit","this","Group","Label","Control","type","placeholder","Button","Component","Assign","removeStudent","studentID","remove","idName","split","idNameT","teacherName","studentRef","teacherRef","update","students","map","key","id","teachers","as","Hire","teachersRef","Remove","handleStudentSubmit","handleTeacherSubmit","removeTeacher","teacherID","variant","StudentInfo","Tabs","defaultActiveKey","Tab","eventKey","title","Table","className","responsive","bordered","hover","striped","size","slice","CardGroup","Card","Header","ListGroup","ListGroupItem","App","login","signInWithPopup","then","result","user","setState","logout","signOut","onAuthStateChanged","on","snapshot","val","newState","newStudents","console","log","Navbar","bg","Brand","onClick","src","photoURL","Text","displayName","Accordion","Toggle","disabled","Collapse","Body","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"mUAWAA,IAASC,cATI,CACXC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,gBACnBC,MAAO,+CAGF,IAAMC,EAAW,IAAIT,IAASU,KAAKC,mBAC7BD,EAAOV,IAASU,OACdV,IAAf,E,cC2BeY,E,kDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAcjB,EAASkB,WAAWC,IAAI,YACtCC,EAAU,CACdC,KAAM,EAAKC,YAAYC,QAAQC,MAC/BC,QAAS,IAEXR,EAAYS,KAAKN,GACjBO,MAAM,EAAKL,YAAYC,QAAQC,MAAQ,8BACvC,EAAKF,YAAYC,QAAQC,MAAQ,IAZjC,EAAKI,MAAQ,GACb,EAAKN,YAAcO,IAAMC,YAHR,E,qDAiBjB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAMC,SAAUC,KAAKnB,cACnB,kBAACiB,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,qBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEjB,IAAKc,KAAKX,YACVe,KAAK,OACLC,YAAY,sBAGhB,kBAACC,EAAA,EAAD,CAAQF,KAAK,UAAb,gB,GA7BWG,aCgENC,E,kDA/Db,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IAMR6B,cAAgB,SAACC,GACI3C,EAASkB,WAAWC,IAApB,oBAAqCwB,IAC7CC,UATM,EAWnB9B,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAI6B,EAAS,EAAKvB,YAAYC,QAAQC,MAAMsB,MAAM,KAC9CC,EAAU,EAAKC,YAAYzB,QAAQC,MAAMsB,MAAM,KAC/C1B,EAAUyB,EAAO,GACjBpB,EAAUsB,EAAQ,GAChBE,EAAajD,EAASkB,WAAWC,IAApB,oBAAqC0B,EAAO,KACzDK,EAAalD,EAChBkB,WACAC,IAFgB,oBAEC4B,EAAQ,GAFT,cAGnBE,EAAWE,OAAO,CAChB9B,KAAMD,EACNK,QAASA,IAEXyB,EAAWxB,KAAK,CAAEN,YAClBO,MAAMP,EAAU,gBAAkBK,IAxBlC,EAAKG,MAAQ,GACb,EAAKN,YAAcO,IAAMC,YACzB,EAAKkB,YAAcnB,IAAMC,YAJR,E,qDA6BjB,IAAIsB,EAAWnB,KAAKpB,MAAMuC,SAASC,KAAI,SAAUjC,GAC/C,OACE,4BAAQkC,IAAKlC,EAAQmC,GAAI/B,MAAO,CAACJ,EAAQmC,GAAInC,EAAQC,OAClDD,EAAQC,SAIXmC,EAAWvB,KAAKpB,MAAM2C,SAASH,KAAI,SAAC5B,GAAD,OACrC,4BAAQ6B,IAAK7B,EAAQ8B,GAAI/B,MAAO,CAACC,EAAQ8B,GAAI9B,EAAQJ,OAClDI,EAAQJ,SAGb,OACE,6BACE,kBAACU,EAAA,EAAD,CAAMC,SAAUC,KAAKnB,cACnB,kBAACiB,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,uBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcqB,GAAG,SAAStC,IAAKc,KAAKX,aACjC8B,IAGL,kBAACrB,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,4CACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcqB,GAAG,SAAStC,IAAKc,KAAKe,aACjCQ,IAGL,kBAACjB,EAAA,EAAD,CAAQF,KAAK,UAAb,gB,GAzDWG,aCoCNkB,E,kDAnCb,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAM2C,EAAc3D,EAASkB,WAAWC,IAAI,YACtCM,EAAU,CACdJ,KAAM,EAAK2B,YAAYzB,QAAQC,MAC/B4B,SAAU,IAEZO,EAAYjC,KAAKD,GACjBE,MAAM,EAAKqB,YAAYzB,QAAQC,MAAQ,8BACvC,EAAKwB,YAAYzB,QAAQC,MAAQ,IAZjC,EAAKI,MAAQ,GACb,EAAKoB,YAAcnB,IAAMC,YAHR,E,qDAiBjB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAMC,SAAUC,KAAKnB,cACnB,kBAACiB,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,qBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEjB,IAAKc,KAAKe,YACVX,KAAK,OACLC,YAAY,sBAGhB,kBAACC,EAAA,EAAD,CAAQF,KAAK,UAAb,gB,GA7BSG,aCkEJoB,E,kDAjEb,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IAcRgD,oBAAsB,SAAC9C,GACrBA,EAAEC,iBACF,EAAK0B,cAAc,EAAKpB,YAAYC,QAAQC,OAC5CG,MAAM,6BAlBW,EAoBnBmC,oBAAsB,SAAC/C,GACrBA,EAAEC,iBACF,EAAK+C,cAAc,EAAKf,YAAYzB,QAAQC,OAC5CG,MAAM,6BArBN,EAAKC,MAAQ,GACb,EAAKoB,YAAcnB,IAAMC,YACzB,EAAKR,YAAcO,IAAMC,YAJR,E,0DAOLa,GACO3C,EAASkB,WAAWC,IAApB,oBAAqCwB,IAC7CC,W,oCAECoB,GACOhE,EAASkB,WAAWC,IAApB,oBAAqC6C,IAC7CpB,W,+BAcX,IAAIQ,EAAWnB,KAAKpB,MAAMuC,SAASC,KAAI,SAACjC,GAAD,OACrC,4BAAQkC,IAAKlC,EAAQmC,GAAI/B,MAAOJ,EAAQmC,IACrCnC,EAAQC,SAGTmC,EAAWvB,KAAKpB,MAAM2C,SAASH,KAAI,SAAC5B,GAAD,OACrC,4BAAQ6B,IAAK7B,EAAQ8B,GAAI/B,MAAOC,EAAQ8B,IACrC9B,EAAQJ,SAGb,OACE,6BACE,kBAACU,EAAA,EAAD,CAAMC,SAAUC,KAAK4B,qBACnB,kBAAC9B,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,uBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcqB,GAAG,SAAStC,IAAKc,KAAKX,aACjC8B,IAGL,kBAACb,EAAA,EAAD,CAAQ0B,QAAQ,SAAS5B,KAAK,UAA9B,WAIF,kBAACN,EAAA,EAAD,CAAMC,SAAUC,KAAK6B,qBACnB,kBAAC/B,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,uBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcqB,GAAG,SAAStC,IAAKc,KAAKe,aACjCQ,IAGL,kBAACjB,EAAA,EAAD,CAAQ0B,QAAQ,SAAS5B,KAAK,UAA9B,gB,GA1DWG,a,uDC+CN0B,G,MA3CK,SAAC,GAA4B,IAA1Bd,EAAyB,EAAzBA,SAAUI,EAAe,EAAfA,SAC/B,OACE,kBAACW,EAAA,EAAD,CAAMC,iBAAiB,UAAUb,GAAG,4BAClC,kBAACc,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,cAC5B,kBAACC,EAAA,EAAD,CAAOC,UAAU,QAAQC,YAAU,EAACC,UAAQ,EAACC,OAAK,EAACC,SAAO,EAACC,KAAK,MAC9D,+BACE,4BACE,4CACA,yCAGJ,+BACG1B,EAAS2B,MAAM,GAAG1B,KAAI,SAACjC,GACtB,OACE,wBAAIkC,IAAKlC,EAAQmC,IACf,4BAAKnC,EAAQC,MACb,4BAAKD,EAAQK,gBAOzB,kBAAC4C,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,cAC5B,kBAACS,EAAA,EAAD,CAAWP,UAAU,aAClBjB,EAASuB,MAAM,GAAG1B,KAAI,SAAC5B,GACtB,OACE,kBAACwD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KAAczD,EAAQJ,MACtB,kBAAC8D,EAAA,EAAD,CAAWlB,QAAQ,SAChBxC,EAAQ2B,SAASC,KAAI,SAACjC,GACrB,OAAO,kBAACgE,EAAA,EAAD,KAAgBhE,gB,wBCsK5BiE,G,wDA/Lb,WAAYxE,GAAQ,IAAD,8BACjB,cAAMA,IAkDRyE,MAAQ,WACN5E,EAAK6E,gBAAgB9E,GAAU+E,MAAK,SAACC,GACnC,IAAMC,EAAOD,EAAOC,KACpB,EAAKC,SAAS,CACZD,KAAMA,QAvDO,EA2DnBE,OAAS,WACPlF,EAAKmF,UAAUL,MAAK,WAClB,EAAKG,SAAS,CAAED,KAAM,WA3DxB,EAAK9D,MAAQ,CACXwB,SAAU,GACVI,SAAU,GACVkC,KAAM,MALS,E,gEASE,IAAD,OAClBhF,EAAKoF,oBAAmB,SAACJ,GACnBA,GACF,EAAKC,SAAS,CAAED,YAGpB,IAAMzE,EAAcjB,EAASkB,WAAWC,IAAI,YACtCwC,EAAc3D,EAASkB,WAAWC,IAAI,YAC5CF,EAAY8E,GAAG,SAAS,SAACC,GACvB,IAAI5C,EAAW4C,EAASC,MACpBC,EAAW,GACf,IAAK,IAAI9E,KAAWgC,EAClB8C,EAASxE,KAAK,CACZ6B,GAAInC,EACJC,KAAM+B,EAAShC,GAASC,KACxBI,QAAS2B,EAAShC,GAASK,UAG/B,EAAKkE,SAAS,CACZvC,SAAU8C,OAGdvC,EAAYoC,GAAG,SAAS,SAACC,GACvB,IAAIxC,EAAWwC,EAASC,MACpBC,EAAW,GACf,IAAK,IAAIzE,KAAW+B,EAAU,CAC5B,IAAI2C,EAAc,GAClB,IAAK,IAAI/E,KAAWoC,EAAS/B,GAAS2B,SACpCgD,QAAQC,IAAI7C,EAAS/B,GAAS2B,SAAShC,GAASA,SAChD+E,EAAYzE,KAAK8B,EAAS/B,GAAS2B,SAAShC,GAASA,SAEvD8E,EAASxE,KAAK,CACZ6B,GAAI9B,EACJJ,KAAMmC,EAAS/B,GAASJ,KACxB+B,SAAU+C,IAGd,EAAKR,SAAS,CACZnC,SAAU0C,S,+BAkBd,OACE,6BACE,kBAACI,EAAA,EAAD,CAAQC,GAAG,OAAOtC,QAAQ,QACxB,kBAACqC,EAAA,EAAOE,MAAR,sCACCvE,KAAKL,MAAM8D,KACV,kBAACnD,EAAA,EAAD,CAAQ0B,QAAQ,YAAYwC,QAASxE,KAAK2D,QAA1C,WAIA,kBAACrD,EAAA,EAAD,CAAQ0B,QAAQ,UAAUwC,QAASxE,KAAKqD,OAAxC,UAIDrD,KAAKL,MAAM8D,KACV,yBAAKjB,UAAU,eAAeiC,IAAKzE,KAAKL,MAAM8D,KAAKiB,WAEnD,8BAEF,yBAAKlC,UAAU,kBACZxC,KAAKL,MAAM8D,KACV,kBAACY,EAAA,EAAOM,KAAR,qBACgB3E,KAAKL,MAAM8D,KAAKmB,YADhC,KAIA,kBAACP,EAAA,EAAOM,KAAR,uDAMN,kBAACE,EAAA,EAAD,KACE,kBAAC7B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAAC4B,EAAA,EAAUC,OAAX,CACEtD,GAAIlB,IACJ0B,QAAQ,UACRK,SAAS,IACT0C,UAAU/E,KAAKL,MAAM8D,MAJvB,mBASF,kBAACoB,EAAA,EAAUG,SAAX,CAAoB3C,SAAS,KAC3B,kBAACW,EAAA,EAAKiC,KAAN,KACE,kBAAC,EAAD,SAIN,kBAACjC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAAC4B,EAAA,EAAUC,OAAX,CACEtD,GAAIlB,IACJ0B,QAAQ,UACRK,SAAS,IACT0C,UAAU/E,KAAKL,MAAM8D,MAJvB,oBASF,kBAACoB,EAAA,EAAUG,SAAX,CAAoB3C,SAAS,KAC3B,kBAACW,EAAA,EAAKiC,KAAN,KACE,kBAAC,EAAD,SAIN,kBAACjC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAAC4B,EAAA,EAAUC,OAAX,CACEtD,GAAIlB,IACJ0B,QAAQ,UACRK,SAAS,IACT0C,UAAU/E,KAAKL,MAAM8D,MAJvB,8BASF,kBAACoB,EAAA,EAAUG,SAAX,CAAoB3C,SAAS,KAC3B,kBAACW,EAAA,EAAKiC,KAAN,KACE,kBAAC,EAAD,CACE9D,SAAUnB,KAAKL,MAAMwB,SACrBI,SAAUvB,KAAKL,MAAM4B,cAK7B,kBAACyB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAAC4B,EAAA,EAAUC,OAAX,CACEtD,GAAIlB,IACJ0B,QAAQ,UACRK,SAAS,IACT0C,UAAU/E,KAAKL,MAAM8D,MAJvB,8BASF,kBAACoB,EAAA,EAAUG,SAAX,CAAoB3C,SAAS,KAC3B,kBAACW,EAAA,EAAKiC,KAAN,KACE,kBAAC,EAAD,CACE9D,SAAUnB,KAAKL,MAAMwB,SACrBI,SAAUvB,KAAKL,MAAM4B,cAK7B,kBAACyB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAAC4B,EAAA,EAAUC,OAAX,CAAkBtD,GAAIlB,IAAQ0B,QAAQ,UAAUK,SAAS,KAAzD,wBAIF,kBAACwC,EAAA,EAAUG,SAAX,CAAoB3C,SAAS,KAC3B,kBAACW,EAAA,EAAKiC,KAAN,KACE,kBAAC,EAAD,CACE9D,SAAUnB,KAAKL,MAAMwB,SACrBI,SAAUvB,KAAKL,MAAM4B,oB,GArLrBhB,cCFE2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvC,MAAK,SAAAwC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMC,c","file":"static/js/main.af5acdca.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyAafCI7INY2i4lB_jnrjTCZcokU8SjDlLM\",\r\n  authDomain: \"school-dashboard-bc657.firebaseapp.com\",\r\n  databaseURL: \"https://school-dashboard-bc657.firebaseio.com\",\r\n  projectId: \"school-dashboard-bc657\",\r\n  storageBucket: \"school-dashboard-bc657.appspot.com\",\r\n  messagingSenderId: \"1000952375233\",\r\n  appId: \"1:1000952375233:web:ca336e73a73d8ed6057140\",\r\n};\r\nfirebase.initializeApp(config);\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport firebase from \"./firebase.js\";\r\n\r\nclass Enroll extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.studentName = React.createRef();\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const studentsRef = firebase.database().ref(\"students\");\r\n    const student = {\r\n      name: this.studentName.current.value,\r\n      teacher: \"\",\r\n    };\r\n    studentsRef.push(student);\r\n    alert(this.studentName.current.value + \" submitted as new student.\");\r\n    this.studentName.current.value = \"\";\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Student Name</Form.Label>\r\n            <Form.Control\r\n              ref={this.studentName}\r\n              type=\"text\"\r\n              placeholder=\"e.g. James Smith\"\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"Submit\">Enroll</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Enroll;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport firebase from \"./firebase.js\";\r\n\r\nclass Assign extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.studentName = React.createRef();\r\n    this.teacherName = React.createRef();\r\n  }\r\n\r\n  removeStudent = (studentID) => {\r\n    const studentRef = firebase.database().ref(`/students/${studentID}`);\r\n    studentRef.remove();\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let idName = this.studentName.current.value.split(\",\");\r\n    let idNameT = this.teacherName.current.value.split(\",\");\r\n    let student = idName[1];\r\n    let teacher = idNameT[1];\r\n    const studentRef = firebase.database().ref(`/students/${idName[0]}`);\r\n    const teacherRef = firebase\r\n      .database()\r\n      .ref(`/teachers/${idNameT[0]}/students`);\r\n    studentRef.update({\r\n      name: student,\r\n      teacher: teacher,\r\n    });\r\n    teacherRef.push({ student });\r\n    alert(student + \" assigned to \" + teacher);\r\n  };\r\n  render() {\r\n    let students = this.props.students.map(function (student) {\r\n      return (\r\n        <option key={student.id} value={[student.id, student.name]}>\r\n          {student.name}\r\n        </option>\r\n      );\r\n    });\r\n    let teachers = this.props.teachers.map((teacher) => (\r\n      <option key={teacher.id} value={[teacher.id, teacher.name]}>\r\n        {teacher.name}\r\n      </option>\r\n    ));\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Select student</Form.Label>\r\n            <Form.Control as=\"select\" ref={this.studentName}>\r\n              {students}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Select teacher to assign student to</Form.Label>\r\n            <Form.Control as=\"select\" ref={this.teacherName}>\r\n              {teachers}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"Submit\">Assign</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assign;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport firebase from \"./firebase.js\";\r\n\r\nclass Hire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.teacherName = React.createRef();\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const teachersRef = firebase.database().ref(\"teachers\");\r\n    const teacher = {\r\n      name: this.teacherName.current.value,\r\n      students: \"\",\r\n    };\r\n    teachersRef.push(teacher);\r\n    alert(this.teacherName.current.value + \" submitted as new teacher.\");\r\n    this.teacherName.current.value = \"\";\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Teacher Name</Form.Label>\r\n            <Form.Control\r\n              ref={this.teacherName}\r\n              type=\"text\"\r\n              placeholder=\"e.g. Susan Kelly\"\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"Submit\">Submit</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hire;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./firebase.js\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Remove extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.teacherName = React.createRef();\r\n    this.studentName = React.createRef();\r\n  }\r\n\r\n  removeStudent(studentID) {\r\n    const studentRef = firebase.database().ref(`/students/${studentID}`);\r\n    studentRef.remove();\r\n  }\r\n  removeTeacher(teacherID) {\r\n    const teacherRef = firebase.database().ref(`/teachers/${teacherID}`);\r\n    teacherRef.remove();\r\n  }\r\n  handleStudentSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.removeStudent(this.studentName.current.value);\r\n    alert(\"Student has been removed\");\r\n  };\r\n  handleTeacherSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.removeTeacher(this.teacherName.current.value);\r\n    alert(\"Teacher has been removed\");\r\n  };\r\n\r\n  render() {\r\n    let students = this.props.students.map((student) => (\r\n      <option key={student.id} value={student.id}>\r\n        {student.name}\r\n      </option>\r\n    ));\r\n    let teachers = this.props.teachers.map((teacher) => (\r\n      <option key={teacher.id} value={teacher.id}>\r\n        {teacher.name}\r\n      </option>\r\n    ));\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleStudentSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Remove student</Form.Label>\r\n            <Form.Control as=\"select\" ref={this.studentName}>\r\n              {students}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button variant=\"danger\" type=\"Submit\">\r\n            Remove\r\n          </Button>\r\n        </Form>\r\n        <Form onSubmit={this.handleTeacherSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Remove teacher</Form.Label>\r\n            <Form.Control as=\"select\" ref={this.teacherName}>\r\n              {teachers}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button variant=\"danger\" type=\"Submit\">\r\n            Remove\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Remove;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardGroup from \"react-bootstrap/CardGroup\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\r\nimport \"./StudentInfo.css\";\r\nconst StudentInfo = ({ students, teachers }) => {\r\n  return (\r\n    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n      <Tab eventKey=\"student\" title=\"By Student\">\r\n        <Table className=\"table\" responsive bordered hover striped size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Student Name</th>\r\n              <th>Teacher</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {students.slice(0).map((student) => {\r\n              return (\r\n                <tr key={student.id}>\r\n                  <td>{student.name}</td>\r\n                  <td>{student.teacher}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Tab>\r\n      <Tab eventKey=\"teacher\" title=\"By Teacher\">\r\n        <CardGroup className=\"cardGroup\">\r\n          {teachers.slice(0).map((teacher) => {\r\n            return (\r\n              <Card>\r\n                <Card.Header>{teacher.name}</Card.Header>\r\n                <ListGroup variant=\"flush\">\r\n                  {teacher.students.map((student) => {\r\n                    return <ListGroupItem>{student}</ListGroupItem>;\r\n                  })}\r\n                </ListGroup>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardGroup>\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React, { Component } from \"react\";\r\nimport firebase, { auth, provider } from \"./firebase.js\";\r\nimport Enroll from \"./Enroll.js\";\r\nimport Assign from \"./Assign.js\";\r\nimport Hire from \"./Hire.js\";\r\nimport Remove from \"./Remove.js\";\r\nimport StudentInfo from \"./StudentInfo.js\";\r\nimport \"./App.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      students: [],\r\n      teachers: [],\r\n      user: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({ user });\r\n      }\r\n    });\r\n    const studentsRef = firebase.database().ref(\"students\");\r\n    const teachersRef = firebase.database().ref(\"teachers\");\r\n    studentsRef.on(\"value\", (snapshot) => {\r\n      let students = snapshot.val();\r\n      let newState = [];\r\n      for (let student in students) {\r\n        newState.push({\r\n          id: student,\r\n          name: students[student].name,\r\n          teacher: students[student].teacher,\r\n        });\r\n      }\r\n      this.setState({\r\n        students: newState,\r\n      });\r\n    });\r\n    teachersRef.on(\"value\", (snapshot) => {\r\n      let teachers = snapshot.val();\r\n      let newState = [];\r\n      for (let teacher in teachers) {\r\n        let newStudents = [];\r\n        for (let student in teachers[teacher].students) {\r\n          console.log(teachers[teacher].students[student].student);\r\n          newStudents.push(teachers[teacher].students[student].student);\r\n        }\r\n        newState.push({\r\n          id: teacher,\r\n          name: teachers[teacher].name,\r\n          students: newStudents,\r\n        });\r\n      }\r\n      this.setState({\r\n        teachers: newState,\r\n      });\r\n    });\r\n  }\r\n  login = () => {\r\n    auth.signInWithPopup(provider).then((result) => {\r\n      const user = result.user;\r\n      this.setState({\r\n        user: user,\r\n      });\r\n    });\r\n  };\r\n  logout = () => {\r\n    auth.signOut().then(() => {\r\n      this.setState({ user: null });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand>Thomas Jefferson ES Dashboard</Navbar.Brand>\r\n          {this.state.user ? (\r\n            <Button variant=\"secondary\" onClick={this.logout}>\r\n              Log Out\r\n            </Button>\r\n          ) : (\r\n            <Button variant=\"primary\" onClick={this.login}>\r\n              Log In\r\n            </Button>\r\n          )}\r\n          {this.state.user ? (\r\n            <img className=\"user-profile\" src={this.state.user.photoURL} />\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <div className=\"welcomeMessage\">\r\n            {this.state.user ? (\r\n              <Navbar.Text>\r\n                Welcome back {this.state.user.displayName}!\r\n              </Navbar.Text>\r\n            ) : (\r\n              <Navbar.Text>\r\n                Please sign in to access dashboard features.\r\n              </Navbar.Text>\r\n            )}\r\n          </div>\r\n        </Navbar>\r\n        <Accordion>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle\r\n                as={Button}\r\n                variant=\"outline\"\r\n                eventKey=\"0\"\r\n                disabled={this.state.user ? false : true}\r\n              >\r\n                Enroll Student\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body>\r\n                <Enroll />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle\r\n                as={Button}\r\n                variant=\"outline\"\r\n                eventKey=\"1\"\r\n                disabled={this.state.user ? false : true}\r\n              >\r\n                Add New Teacher\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body>\r\n                <Hire />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle\r\n                as={Button}\r\n                variant=\"outline\"\r\n                eventKey=\"2\"\r\n                disabled={this.state.user ? false : true}\r\n              >\r\n                Assign Student to Teacher\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body>\r\n                <Assign\r\n                  students={this.state.students}\r\n                  teachers={this.state.teachers}\r\n                />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle\r\n                as={Button}\r\n                variant=\"outline\"\r\n                eventKey=\"3\"\r\n                disabled={this.state.user ? false : true}\r\n              >\r\n                Remove Student or Teacher\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <Card.Body>\r\n                <Remove\r\n                  students={this.state.students}\r\n                  teachers={this.state.teachers}\r\n                />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"outline\" eventKey=\"4\">\r\n                Student Information\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body>\r\n                <StudentInfo\r\n                  students={this.state.students}\r\n                  teachers={this.state.teachers}\r\n                />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}